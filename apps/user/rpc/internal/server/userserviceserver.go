// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package server

import (
	"context"

	"Anitale/apps/user/rpc/internal/logic"
	"Anitale/apps/user/rpc/internal/svc"
	"Anitale/apps/user/rpc/pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 用户注册
func (s *UserServiceServer) RegisterUser(ctx context.Context, in *pb.RegisterUserRequest) (*pb.RegisterUserResponse, error) {
	l := logic.NewRegisterUserLogic(ctx, s.svcCtx)
	return l.RegisterUser(in)
}

// 用户登录
func (s *UserServiceServer) LoginUser(ctx context.Context, in *pb.LoginUserRequest) (*pb.LoginUserResponse, error) {
	l := logic.NewLoginUserLogic(ctx, s.svcCtx)
	return l.LoginUser(in)
}

// 获取用户个人信息
func (s *UserServiceServer) GetUserProfile(ctx context.Context, in *pb.GetUserProfileRequest) (*pb.GetUserProfileResponse, error) {
	l := logic.NewGetUserProfileLogic(ctx, s.svcCtx)
	return l.GetUserProfile(in)
}

// 更新用户个人信息
func (s *UserServiceServer) UpdateUserProfile(ctx context.Context, in *pb.UpdateUserProfileRequest) (*pb.UpdateUserProfileResponse, error) {
	l := logic.NewUpdateUserProfileLogic(ctx, s.svcCtx)
	return l.UpdateUserProfile(in)
}

// 更新用户偏好设置
func (s *UserServiceServer) UpdateUserPreferences(ctx context.Context, in *pb.UpdateUserPreferencesRequest) (*pb.UpdateUserPreferencesResponse, error) {
	l := logic.NewUpdateUserPreferencesLogic(ctx, s.svcCtx)
	return l.UpdateUserPreferences(in)
}

// 获取用户偏好设置
func (s *UserServiceServer) GetUserPreferences(ctx context.Context, in *pb.GetUserPreferencesRequest) (*pb.GetUserPreferencesResponse, error) {
	l := logic.NewGetUserPreferencesLogic(ctx, s.svcCtx)
	return l.GetUserPreferences(in)
}

// 用户订阅
func (s *UserServiceServer) UserSubscribe(ctx context.Context, in *pb.UserSubscribeRequest) (*pb.UserSubscribeResponse, error) {
	l := logic.NewUserSubscribeLogic(ctx, s.svcCtx)
	return l.UserSubscribe(in)
}
