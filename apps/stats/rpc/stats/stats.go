// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: stats.proto

package stats

import (
	"context"

	"Anitale/apps/stats/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddStatsReq     = pb.AddStatsReq
	AddStatsResp    = pb.AddStatsResp
	DeleteStatsReq  = pb.DeleteStatsReq
	DeleteStatsResp = pb.DeleteStatsResp
	Item            = pb.Item
	SortByHotReq    = pb.SortByHotReq
	SortByHotResp   = pb.SortByHotResp
	UpdateStatsReq  = pb.UpdateStatsReq
	UpdateStatsResp = pb.UpdateStatsResp

	Stats interface {
		// 按热度排序, 返回排序完成的 anime_id 列表
		SortByHot(ctx context.Context, in *SortByHotReq, opts ...grpc.CallOption) (*SortByHotResp, error)
	}

	defaultStats struct {
		cli zrpc.Client
	}
)

func NewStats(cli zrpc.Client) Stats {
	return &defaultStats{
		cli: cli,
	}
}

// 按热度排序, 返回排序完成的 anime_id 列表
func (m *defaultStats) SortByHot(ctx context.Context, in *SortByHotReq, opts ...grpc.CallOption) (*SortByHotResp, error) {
	client := pb.NewStatsClient(m.cli.Conn())
	return client.SortByHot(ctx, in, opts...)
}
