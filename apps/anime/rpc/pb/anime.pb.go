// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: apps/anime/rpc/desc/proto/anime.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId     int64                `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title       string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string               `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Region      string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AnimeType   string               `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	ImgUrl      string               `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string               `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64              `protobuf:"fixed64,9,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamp.Timestamp `protobuf:"bytes,11,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
	UpdatedAt   *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Item) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Item) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *Item) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *Item) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *Item) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Item) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Item) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *Item) GetUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

func (x *Item) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Item) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 获得一条anime数据
type GetAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *GetAnimeReq) Reset() {
	*x = GetAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimeReq) ProtoMessage() {}

func (x *GetAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimeReq.ProtoReflect.Descriptor instead.
func (*GetAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{1}
}

func (x *GetAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type GetAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anime *Item `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
}

func (x *GetAnimeResp) Reset() {
	*x = GetAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimeResp) ProtoMessage() {}

func (x *GetAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimeResp.ProtoReflect.Descriptor instead.
func (*GetAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{2}
}

func (x *GetAnimeResp) GetAnime() *Item {
	if x != nil {
		return x.Anime
	}
	return nil
}

// 增加一条anime数据
type AddAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string               `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Country     string               `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	AnimeType   string               `protobuf:"bytes,4,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	ImgUrl      string               `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string               `protobuf:"bytes,6,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string               `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64              `protobuf:"fixed64,8,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamp.Timestamp `protobuf:"bytes,9,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamp.Timestamp `protobuf:"bytes,10,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *AddAnimeReq) Reset() {
	*x = AddAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnimeReq) ProtoMessage() {}

func (x *AddAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnimeReq.ProtoReflect.Descriptor instead.
func (*AddAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{3}
}

func (x *AddAnimeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddAnimeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddAnimeReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddAnimeReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *AddAnimeReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *AddAnimeReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *AddAnimeReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddAnimeReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AddAnimeReq) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *AddAnimeReq) GetUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

type AddAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AddAnimeResp) Reset() {
	*x = AddAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnimeResp) ProtoMessage() {}

func (x *AddAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnimeResp.ProtoReflect.Descriptor instead.
func (*AddAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{4}
}

func (x *AddAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// 删除一条anime数据
type DeleteAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *DeleteAnimeReq) Reset() {
	*x = DeleteAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnimeReq) ProtoMessage() {}

func (x *DeleteAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnimeReq.ProtoReflect.Descriptor instead.
func (*DeleteAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type DeleteAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *DeleteAnimeResp) Reset() {
	*x = DeleteAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnimeResp) ProtoMessage() {}

func (x *DeleteAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnimeResp.ProtoReflect.Descriptor instead.
func (*DeleteAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// 修改一条anime数据
type UpdateAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId     int64                `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title       string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string               `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Region      string               `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AnimeType   string               `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	ImgUrl      string               `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string               `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64              `protobuf:"fixed64,9,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamp.Timestamp `protobuf:"bytes,11,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *UpdateAnimeReq) Reset() {
	*x = UpdateAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnimeReq) ProtoMessage() {}

func (x *UpdateAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnimeReq.ProtoReflect.Descriptor instead.
func (*UpdateAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *UpdateAnimeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAnimeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateAnimeReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateAnimeReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *UpdateAnimeReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *UpdateAnimeReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *UpdateAnimeReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateAnimeReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateAnimeReq) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *UpdateAnimeReq) GetUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

type UpdateAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *UpdateAnimeResp) Reset() {
	*x = UpdateAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnimeResp) ProtoMessage() {}

func (x *UpdateAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnimeResp.ProtoReflect.Descriptor instead.
func (*UpdateAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type AnimeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64   `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Tag       string  `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	AnimeType string  `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Region    string  `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Rating    float64 `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`
	Year      int64   `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	Season    int64   `protobuf:"varint,9,opt,name=season,proto3" json:"season,omitempty"`
	Sort      string  `protobuf:"bytes,10,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *AnimeListReq) Reset() {
	*x = AnimeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListReq) ProtoMessage() {}

func (x *AnimeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListReq.ProtoReflect.Descriptor instead.
func (*AnimeListReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{9}
}

func (x *AnimeListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AnimeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AnimeListReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AnimeListReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *AnimeListReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AnimeListReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AnimeListReq) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *AnimeListReq) GetSeason() int64 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *AnimeListReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type AnimeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeList []*Item `protobuf:"bytes,1,rep,name=anime_list,json=animeList,proto3" json:"anime_list,omitempty"`
}

func (x *AnimeListResp) Reset() {
	*x = AnimeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListResp) ProtoMessage() {}

func (x *AnimeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListResp.ProtoReflect.Descriptor instead.
func (*AnimeListResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{10}
}

func (x *AnimeListResp) GetAnimeList() []*Item {
	if x != nil {
		return x.AnimeList
	}
	return nil
}

var File_apps_anime_rpc_desc_proto_anime_proto protoreflect.FileDescriptor

var file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd7, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x22, 0xcf, 0x02, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x29, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xeb,
	0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x3b, 0x0a,
	0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xa5, 0x02, 0x0a, 0x05, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce sync.Once
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = file_apps_anime_rpc_desc_proto_anime_proto_rawDesc
)

func file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP() []byte {
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce.Do(func() {
		file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_anime_rpc_desc_proto_anime_proto_rawDescData)
	})
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescData
}

var file_apps_anime_rpc_desc_proto_anime_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_apps_anime_rpc_desc_proto_anime_proto_goTypes = []any{
	(*Item)(nil),                // 0: anime.Item
	(*GetAnimeReq)(nil),         // 1: anime.GetAnimeReq
	(*GetAnimeResp)(nil),        // 2: anime.GetAnimeResp
	(*AddAnimeReq)(nil),         // 3: anime.AddAnimeReq
	(*AddAnimeResp)(nil),        // 4: anime.AddAnimeResp
	(*DeleteAnimeReq)(nil),      // 5: anime.DeleteAnimeReq
	(*DeleteAnimeResp)(nil),     // 6: anime.DeleteAnimeResp
	(*UpdateAnimeReq)(nil),      // 7: anime.UpdateAnimeReq
	(*UpdateAnimeResp)(nil),     // 8: anime.UpdateAnimeResp
	(*AnimeListReq)(nil),        // 9: anime.AnimeListReq
	(*AnimeListResp)(nil),       // 10: anime.AnimeListResp
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = []int32{
	11, // 0: anime.Item.release_date:type_name -> google.protobuf.Timestamp
	11, // 1: anime.Item.update_date:type_name -> google.protobuf.Timestamp
	11, // 2: anime.Item.updated_at:type_name -> google.protobuf.Timestamp
	11, // 3: anime.Item.created_at:type_name -> google.protobuf.Timestamp
	0,  // 4: anime.GetAnimeResp.anime:type_name -> anime.Item
	11, // 5: anime.AddAnimeReq.release_date:type_name -> google.protobuf.Timestamp
	11, // 6: anime.AddAnimeReq.update_date:type_name -> google.protobuf.Timestamp
	11, // 7: anime.UpdateAnimeReq.release_date:type_name -> google.protobuf.Timestamp
	11, // 8: anime.UpdateAnimeReq.update_date:type_name -> google.protobuf.Timestamp
	0,  // 9: anime.AnimeListResp.anime_list:type_name -> anime.Item
	1,  // 10: anime.Anime.GetAnime:input_type -> anime.GetAnimeReq
	3,  // 11: anime.Anime.AddAnime:input_type -> anime.AddAnimeReq
	5,  // 12: anime.Anime.DeleteAnime:input_type -> anime.DeleteAnimeReq
	7,  // 13: anime.Anime.UpdateAnime:input_type -> anime.UpdateAnimeReq
	9,  // 14: anime.Anime.AnimeList:input_type -> anime.AnimeListReq
	2,  // 15: anime.Anime.GetAnime:output_type -> anime.GetAnimeResp
	4,  // 16: anime.Anime.AddAnime:output_type -> anime.AddAnimeResp
	6,  // 17: anime.Anime.DeleteAnime:output_type -> anime.DeleteAnimeResp
	8,  // 18: anime.Anime.UpdateAnime:output_type -> anime.UpdateAnimeResp
	10, // 19: anime.Anime.AnimeList:output_type -> anime.AnimeListResp
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_apps_anime_rpc_desc_proto_anime_proto_init() }
func file_apps_anime_rpc_desc_proto_anime_proto_init() {
	if File_apps_anime_rpc_desc_proto_anime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AddAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_anime_rpc_desc_proto_anime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_anime_rpc_desc_proto_anime_proto_goTypes,
		DependencyIndexes: file_apps_anime_rpc_desc_proto_anime_proto_depIdxs,
		MessageInfos:      file_apps_anime_rpc_desc_proto_anime_proto_msgTypes,
	}.Build()
	File_apps_anime_rpc_desc_proto_anime_proto = out.File
	file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = nil
	file_apps_anime_rpc_desc_proto_anime_proto_goTypes = nil
	file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = nil
}
