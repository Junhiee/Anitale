// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: apps/anime/rpc/desc/proto/anime.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Rank
type RankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *RankReq) Reset() {
	*x = RankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankReq) ProtoMessage() {}

func (x *RankReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankReq.ProtoReflect.Descriptor instead.
func (*RankReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{0}
}

func (x *RankReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RankReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Anime
type Anime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId     int64                  `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Region      string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Format      string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	ImgUrl      string                 `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string                 `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64                `protobuf:"fixed64,9,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Anime) Reset() {
	*x = Anime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anime) ProtoMessage() {}

func (x *Anime) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anime.ProtoReflect.Descriptor instead.
func (*Anime) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{1}
}

func (x *Anime) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *Anime) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Anime) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Anime) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Anime) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Anime) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *Anime) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *Anime) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Anime) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Anime) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *Anime) GetUpdateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

func (x *Anime) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Anime) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type AnimeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Format   string `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	Region   string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Year     int64  `protobuf:"varint,7,opt,name=year,proto3" json:"year,omitempty"`
	Season   int64  `protobuf:"varint,8,opt,name=season,proto3" json:"season,omitempty"`
	Sort     string `protobuf:"bytes,9,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *AnimeListReq) Reset() {
	*x = AnimeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListReq) ProtoMessage() {}

func (x *AnimeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListReq.ProtoReflect.Descriptor instead.
func (*AnimeListReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{2}
}

func (x *AnimeListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AnimeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AnimeListReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AnimeListReq) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *AnimeListReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AnimeListReq) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *AnimeListReq) GetSeason() int64 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *AnimeListReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type AnimeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeList  []*Anime `protobuf:"bytes,1,rep,name=anime_list,json=animeList,proto3" json:"anime_list,omitempty"`
	Page       int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalCount int64    `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPages int64    `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *AnimeListResp) Reset() {
	*x = AnimeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListResp) ProtoMessage() {}

func (x *AnimeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListResp.ProtoReflect.Descriptor instead.
func (*AnimeListResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{3}
}

func (x *AnimeListResp) GetAnimeList() []*Anime {
	if x != nil {
		return x.AnimeList
	}
	return nil
}

func (x *AnimeListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AnimeListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AnimeListResp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AnimeListResp) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *GetAnimeReq) Reset() {
	*x = GetAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimeReq) ProtoMessage() {}

func (x *GetAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimeReq.ProtoReflect.Descriptor instead.
func (*GetAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{4}
}

func (x *GetAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type GetAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anime *Anime `protobuf:"bytes,1,opt,name=anime,proto3" json:"anime,omitempty"`
}

func (x *GetAnimeResp) Reset() {
	*x = GetAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnimeResp) ProtoMessage() {}

func (x *GetAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnimeResp.ProtoReflect.Descriptor instead.
func (*GetAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{5}
}

func (x *GetAnimeResp) GetAnime() *Anime {
	if x != nil {
		return x.Anime
	}
	return nil
}

type AddAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Country     string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Format      string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	ImgUrl      string                 `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string                 `protobuf:"bytes,6,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64                `protobuf:"fixed64,8,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *AddAnimeReq) Reset() {
	*x = AddAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnimeReq) ProtoMessage() {}

func (x *AddAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnimeReq.ProtoReflect.Descriptor instead.
func (*AddAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{6}
}

func (x *AddAnimeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddAnimeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AddAnimeReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddAnimeReq) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *AddAnimeReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *AddAnimeReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *AddAnimeReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddAnimeReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AddAnimeReq) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *AddAnimeReq) GetUpdateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

type AddAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AddAnimeResp) Reset() {
	*x = AddAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAnimeResp) ProtoMessage() {}

func (x *AddAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAnimeResp.ProtoReflect.Descriptor instead.
func (*AddAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{7}
}

func (x *AddAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type DeleteAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *DeleteAnimeReq) Reset() {
	*x = DeleteAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnimeReq) ProtoMessage() {}

func (x *DeleteAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnimeReq.ProtoReflect.Descriptor instead.
func (*DeleteAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type DeleteAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *DeleteAnimeResp) Reset() {
	*x = DeleteAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnimeResp) ProtoMessage() {}

func (x *DeleteAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnimeResp.ProtoReflect.Descriptor instead.
func (*DeleteAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type UpdateAnimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId     int64                  `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Region      string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Format      string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	ImgUrl      string                 `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Studios     string                 `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status      string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating      float64                `protobuf:"fixed64,9,opt,name=rating,proto3" json:"rating,omitempty"`
	ReleaseDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	UpdateDate  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *UpdateAnimeReq) Reset() {
	*x = UpdateAnimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnimeReq) ProtoMessage() {}

func (x *UpdateAnimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnimeReq.ProtoReflect.Descriptor instead.
func (*UpdateAnimeReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAnimeReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *UpdateAnimeReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAnimeReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateAnimeReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateAnimeReq) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *UpdateAnimeReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *UpdateAnimeReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *UpdateAnimeReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateAnimeReq) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateAnimeReq) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *UpdateAnimeReq) GetUpdateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

type UpdateAnimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *UpdateAnimeResp) Reset() {
	*x = UpdateAnimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnimeResp) ProtoMessage() {}

func (x *UpdateAnimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnimeResp.ProtoReflect.Descriptor instead.
func (*UpdateAnimeResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAnimeResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// episodes
type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpisodeId     int64                  `protobuf:"varint,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	AnimeId       int64                  `protobuf:"varint,2,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`                   // 所属动画的ID，逻辑上指向 anime 表
	EpisodeNumber int32                  `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number,omitempty"` // 剧集的编号，如第几集
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                       // 剧集标题
	ReleaseDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`        // 放送事件
	Duration      int32                  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`                                // 剧集时长，单位为分钟
	Synopsis      string                 `protobuf:"bytes,7,opt,name=synopsis,proto3" json:"synopsis,omitempty"`                                 // 剧集的内容概要
	VideoUrl      string                 `protobuf:"bytes,8,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`                 // 剧集的视频地址
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{12}
}

func (x *Episode) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

func (x *Episode) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *Episode) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Episode) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *Episode) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Episode) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Episode) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type GetEpisodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId    int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	EpisodeNum int64 `protobuf:"varint,2,opt,name=episode_num,json=episodeNum,proto3" json:"episode_num,omitempty"`
}

func (x *GetEpisodesReq) Reset() {
	*x = GetEpisodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEpisodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEpisodesReq) ProtoMessage() {}

func (x *GetEpisodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEpisodesReq.ProtoReflect.Descriptor instead.
func (*GetEpisodesReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{13}
}

func (x *GetEpisodesReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *GetEpisodesReq) GetEpisodeNum() int64 {
	if x != nil {
		return x.EpisodeNum
	}
	return 0
}

type GetEpisodeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64      `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Episode []*Episode `protobuf:"bytes,2,rep,name=episode,proto3" json:"episode,omitempty"`
}

func (x *GetEpisodeListResp) Reset() {
	*x = GetEpisodeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEpisodeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEpisodeListResp) ProtoMessage() {}

func (x *GetEpisodeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEpisodeListResp.ProtoReflect.Descriptor instead.
func (*GetEpisodeListResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{14}
}

func (x *GetEpisodeListResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *GetEpisodeListResp) GetEpisode() []*Episode {
	if x != nil {
		return x.Episode
	}
	return nil
}

type AddEpisodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId       int64                  `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	EpisodeNumber int32                  `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number,omitempty"`
	ReleaseDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Duration      int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Synopsis      string                 `protobuf:"bytes,6,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	VideoUrl      string                 `protobuf:"bytes,7,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *AddEpisodesReq) Reset() {
	*x = AddEpisodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEpisodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEpisodesReq) ProtoMessage() {}

func (x *AddEpisodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEpisodesReq.ProtoReflect.Descriptor instead.
func (*AddEpisodesReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{15}
}

func (x *AddEpisodesReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *AddEpisodesReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddEpisodesReq) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *AddEpisodesReq) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *AddEpisodesReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AddEpisodesReq) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *AddEpisodesReq) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type AddEpisodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpisodeId int64 `protobuf:"varint,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
}

func (x *AddEpisodesResp) Reset() {
	*x = AddEpisodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEpisodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEpisodesResp) ProtoMessage() {}

func (x *AddEpisodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEpisodesResp.ProtoReflect.Descriptor instead.
func (*AddEpisodesResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{16}
}

func (x *AddEpisodesResp) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

type UpdateEpisodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpisodeId     int64                  `protobuf:"varint,1,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	AnimeId       int64                  `protobuf:"varint,2,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	EpisodeNumber int32                  `protobuf:"varint,3,opt,name=episode_number,json=episodeNumber,proto3" json:"episode_number,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Duration      int32                  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Synopsis      string                 `protobuf:"bytes,7,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	VideoUrl      string                 `protobuf:"bytes,8,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *UpdateEpisodesReq) Reset() {
	*x = UpdateEpisodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEpisodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEpisodesReq) ProtoMessage() {}

func (x *UpdateEpisodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEpisodesReq.ProtoReflect.Descriptor instead.
func (*UpdateEpisodesReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateEpisodesReq) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

func (x *UpdateEpisodesReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *UpdateEpisodesReq) GetEpisodeNumber() int32 {
	if x != nil {
		return x.EpisodeNumber
	}
	return 0
}

func (x *UpdateEpisodesReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateEpisodesReq) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *UpdateEpisodesReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateEpisodesReq) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *UpdateEpisodesReq) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type UpdateEpisodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateId          int64                  `protobuf:"varint,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	AnimeId           int64                  `protobuf:"varint,2,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	EpisodeId         int64                  `protobuf:"varint,3,opt,name=episode_id,json=episodeId,proto3" json:"episode_id,omitempty"`
	UpdateType        string                 `protobuf:"bytes,4,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`                      // 更新类型，值可为 new_episode(默认), season_update, general_update
	UpdateDescription string                 `protobuf:"bytes,5,opt,name=update_description,json=updateDescription,proto3" json:"update_description,omitempty"` // 更新内容描述
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UpdateEpisodesResp) Reset() {
	*x = UpdateEpisodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEpisodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEpisodesResp) ProtoMessage() {}

func (x *UpdateEpisodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEpisodesResp.ProtoReflect.Descriptor instead.
func (*UpdateEpisodesResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateEpisodesResp) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *UpdateEpisodesResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *UpdateEpisodesResp) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

func (x *UpdateEpisodesResp) GetUpdateType() string {
	if x != nil {
		return x.UpdateType
	}
	return ""
}

func (x *UpdateEpisodesResp) GetUpdateDescription() string {
	if x != nil {
		return x.UpdateDescription
	}
	return ""
}

func (x *UpdateEpisodesResp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Character
type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId int64  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 角色的唯一标识
	AnimeId     int64  `protobuf:"varint,2,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`             // 所属动画的 ID
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                   // 角色的名字
	Role        string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`                                   // 角色类型，如 main, supporting, cameo
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                     // 角色的简介
	ImageUrl    string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`           // 角色的图片 URL
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{19}
}

func (x *Character) GetCharacterId() int64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *Character) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Character) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Character) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetCharacterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64  `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"` // 动画 ID，用于筛选该动画中的角色
	Role    string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                       // 角色类型，可选值：main（主角）、supporting（配角）、cameo（客串），默认 supporting
}

func (x *GetCharacterReq) Reset() {
	*x = GetCharacterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterReq) ProtoMessage() {}

func (x *GetCharacterReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterReq.ProtoReflect.Descriptor instead.
func (*GetCharacterReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{20}
}

func (x *GetCharacterReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *GetCharacterReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetCharacterListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*Character `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`                    // 角色列表
	TotalCount int64        `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 符合条件的角色总数
}

func (x *GetCharacterListResp) Reset() {
	*x = GetCharacterListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterListResp) ProtoMessage() {}

func (x *GetCharacterListResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterListResp.ProtoReflect.Descriptor instead.
func (*GetCharacterListResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{21}
}

func (x *GetCharacterListResp) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *GetCharacterListResp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Tag
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64  `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Tag   string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{22}
}

func (x *Tag) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *Tag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type TagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *TagReq) Reset() {
	*x = TagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagReq) ProtoMessage() {}

func (x *TagReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagReq.ProtoReflect.Descriptor instead.
func (*TagReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{23}
}

func (x *TagReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type TagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TagResp) Reset() {
	*x = TagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagResp) ProtoMessage() {}

func (x *TagResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagResp.ProtoReflect.Descriptor instead.
func (*TagResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{24}
}

func (x *TagResp) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_apps_anime_rpc_desc_proto_anime_proto protoreflect.FileDescriptor

var file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3a, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd1, 0x03, 0x0a, 0x05,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67,
	0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc1, 0x01, 0x0a, 0x0c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x05, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x29,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0xe4, 0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2c, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x07, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70,
	0x73, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70,
	0x73, 0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c,
	0x22, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x59,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x30, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0xf6, 0x01, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x22, 0x23, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x07, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0x96, 0x05, 0x0a, 0x0c, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x2e,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x0e, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x0d, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x0e, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce sync.Once
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = file_apps_anime_rpc_desc_proto_anime_proto_rawDesc
)

func file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP() []byte {
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce.Do(func() {
		file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_anime_rpc_desc_proto_anime_proto_rawDescData)
	})
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescData
}

var file_apps_anime_rpc_desc_proto_anime_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_apps_anime_rpc_desc_proto_anime_proto_goTypes = []any{
	(*RankReq)(nil),               // 0: anime.RankReq
	(*Anime)(nil),                 // 1: anime.Anime
	(*AnimeListReq)(nil),          // 2: anime.AnimeListReq
	(*AnimeListResp)(nil),         // 3: anime.AnimeListResp
	(*GetAnimeReq)(nil),           // 4: anime.GetAnimeReq
	(*GetAnimeResp)(nil),          // 5: anime.GetAnimeResp
	(*AddAnimeReq)(nil),           // 6: anime.AddAnimeReq
	(*AddAnimeResp)(nil),          // 7: anime.AddAnimeResp
	(*DeleteAnimeReq)(nil),        // 8: anime.DeleteAnimeReq
	(*DeleteAnimeResp)(nil),       // 9: anime.DeleteAnimeResp
	(*UpdateAnimeReq)(nil),        // 10: anime.UpdateAnimeReq
	(*UpdateAnimeResp)(nil),       // 11: anime.UpdateAnimeResp
	(*Episode)(nil),               // 12: anime.Episode
	(*GetEpisodesReq)(nil),        // 13: anime.GetEpisodesReq
	(*GetEpisodeListResp)(nil),    // 14: anime.GetEpisodeListResp
	(*AddEpisodesReq)(nil),        // 15: anime.AddEpisodesReq
	(*AddEpisodesResp)(nil),       // 16: anime.AddEpisodesResp
	(*UpdateEpisodesReq)(nil),     // 17: anime.UpdateEpisodesReq
	(*UpdateEpisodesResp)(nil),    // 18: anime.UpdateEpisodesResp
	(*Character)(nil),             // 19: anime.Character
	(*GetCharacterReq)(nil),       // 20: anime.GetCharacterReq
	(*GetCharacterListResp)(nil),  // 21: anime.GetCharacterListResp
	(*Tag)(nil),                   // 22: anime.Tag
	(*TagReq)(nil),                // 23: anime.TagReq
	(*TagResp)(nil),               // 24: anime.TagResp
	(*timestamppb.Timestamp)(nil), // 25: google.protobuf.Timestamp
}
var file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = []int32{
	25, // 0: anime.Anime.release_date:type_name -> google.protobuf.Timestamp
	25, // 1: anime.Anime.update_date:type_name -> google.protobuf.Timestamp
	25, // 2: anime.Anime.updated_at:type_name -> google.protobuf.Timestamp
	25, // 3: anime.Anime.created_at:type_name -> google.protobuf.Timestamp
	1,  // 4: anime.AnimeListResp.anime_list:type_name -> anime.Anime
	1,  // 5: anime.GetAnimeResp.anime:type_name -> anime.Anime
	25, // 6: anime.AddAnimeReq.release_date:type_name -> google.protobuf.Timestamp
	25, // 7: anime.AddAnimeReq.update_date:type_name -> google.protobuf.Timestamp
	25, // 8: anime.UpdateAnimeReq.release_date:type_name -> google.protobuf.Timestamp
	25, // 9: anime.UpdateAnimeReq.update_date:type_name -> google.protobuf.Timestamp
	25, // 10: anime.Episode.release_date:type_name -> google.protobuf.Timestamp
	12, // 11: anime.GetEpisodeListResp.episode:type_name -> anime.Episode
	25, // 12: anime.AddEpisodesReq.release_date:type_name -> google.protobuf.Timestamp
	25, // 13: anime.UpdateEpisodesReq.release_date:type_name -> google.protobuf.Timestamp
	25, // 14: anime.UpdateEpisodesResp.updated_at:type_name -> google.protobuf.Timestamp
	19, // 15: anime.GetCharacterListResp.characters:type_name -> anime.Character
	2,  // 16: anime.AnimeService.AnimeList:input_type -> anime.AnimeListReq
	4,  // 17: anime.AnimeService.GetAnime:input_type -> anime.GetAnimeReq
	6,  // 18: anime.AnimeService.AddAnime:input_type -> anime.AddAnimeReq
	8,  // 19: anime.AnimeService.DeleteAnime:input_type -> anime.DeleteAnimeReq
	10, // 20: anime.AnimeService.UpdateAnime:input_type -> anime.UpdateAnimeReq
	0,  // 21: anime.AnimeService.Rank:input_type -> anime.RankReq
	13, // 22: anime.AnimeService.GetEpisodeList:input_type -> anime.GetEpisodesReq
	15, // 23: anime.AnimeService.AddEpisodes:input_type -> anime.AddEpisodesReq
	17, // 24: anime.AnimeService.UpdateEpisodes:input_type -> anime.UpdateEpisodesReq
	20, // 25: anime.AnimeService.GetCharacterList:input_type -> anime.GetCharacterReq
	23, // 26: anime.AnimeService.GetTags:input_type -> anime.TagReq
	3,  // 27: anime.AnimeService.AnimeList:output_type -> anime.AnimeListResp
	5,  // 28: anime.AnimeService.GetAnime:output_type -> anime.GetAnimeResp
	7,  // 29: anime.AnimeService.AddAnime:output_type -> anime.AddAnimeResp
	9,  // 30: anime.AnimeService.DeleteAnime:output_type -> anime.DeleteAnimeResp
	11, // 31: anime.AnimeService.UpdateAnime:output_type -> anime.UpdateAnimeResp
	3,  // 32: anime.AnimeService.Rank:output_type -> anime.AnimeListResp
	14, // 33: anime.AnimeService.GetEpisodeList:output_type -> anime.GetEpisodeListResp
	16, // 34: anime.AnimeService.AddEpisodes:output_type -> anime.AddEpisodesResp
	18, // 35: anime.AnimeService.UpdateEpisodes:output_type -> anime.UpdateEpisodesResp
	21, // 36: anime.AnimeService.GetCharacterList:output_type -> anime.GetCharacterListResp
	24, // 37: anime.AnimeService.GetTags:output_type -> anime.TagResp
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_apps_anime_rpc_desc_proto_anime_proto_init() }
func file_apps_anime_rpc_desc_proto_anime_proto_init() {
	if File_apps_anime_rpc_desc_proto_anime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Anime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AddAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AddAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAnimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAnimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetEpisodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetEpisodeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AddEpisodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AddEpisodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEpisodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateEpisodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetCharacterListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*TagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_anime_rpc_desc_proto_anime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_anime_rpc_desc_proto_anime_proto_goTypes,
		DependencyIndexes: file_apps_anime_rpc_desc_proto_anime_proto_depIdxs,
		MessageInfos:      file_apps_anime_rpc_desc_proto_anime_proto_msgTypes,
	}.Build()
	File_apps_anime_rpc_desc_proto_anime_proto = out.File
	file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = nil
	file_apps_anime_rpc_desc_proto_anime_proto_goTypes = nil
	file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = nil
}
