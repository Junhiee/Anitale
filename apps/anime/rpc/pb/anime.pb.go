// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: apps/anime/rpc/desc/proto/anime.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId    int64                `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title      string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc       string               `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Country    string               `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	AnimeType  string               `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Tag        string               `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	Studios    string               `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status     string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating     int64                `protobuf:"varint,9,opt,name=rating,proto3" json:"rating,omitempty"`
	RelaseDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
	UpdateDate *timestamp.Timestamp `protobuf:"bytes,11,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Item) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Item) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *Item) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Item) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *Item) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Item) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Item) GetRelaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

func (x *Item) GetUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

func (x *Item) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Item) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// 增加一条anime数据
type AnimeAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc       string               `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Country    string               `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	AnimeType  string               `protobuf:"bytes,4,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Tag        string               `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Studios    string               `protobuf:"bytes,6,opt,name=studios,proto3" json:"studios,omitempty"`
	Status     string               `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Rating     int64                `protobuf:"varint,8,opt,name=rating,proto3" json:"rating,omitempty"`
	RelaseDate *timestamp.Timestamp `protobuf:"bytes,9,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
}

func (x *AnimeAddReq) Reset() {
	*x = AnimeAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeAddReq) ProtoMessage() {}

func (x *AnimeAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeAddReq.ProtoReflect.Descriptor instead.
func (*AnimeAddReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{1}
}

func (x *AnimeAddReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AnimeAddReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AnimeAddReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AnimeAddReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *AnimeAddReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AnimeAddReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *AnimeAddReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AnimeAddReq) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AnimeAddReq) GetRelaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

type AnimeAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AnimeAddResp) Reset() {
	*x = AnimeAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeAddResp) ProtoMessage() {}

func (x *AnimeAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeAddResp.ProtoReflect.Descriptor instead.
func (*AnimeAddResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{2}
}

func (x *AnimeAddResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// 删除一条anime数据
type AnimeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AnimeDeleteReq) Reset() {
	*x = AnimeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeDeleteReq) ProtoMessage() {}

func (x *AnimeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeDeleteReq.ProtoReflect.Descriptor instead.
func (*AnimeDeleteReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{3}
}

func (x *AnimeDeleteReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

type AnimeDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AnimeDeleteResp) Reset() {
	*x = AnimeDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeDeleteResp) ProtoMessage() {}

func (x *AnimeDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeDeleteResp.ProtoReflect.Descriptor instead.
func (*AnimeDeleteResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{4}
}

func (x *AnimeDeleteResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// 修改一条anime数据
type AnimeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId    int64                `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
	Title      string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc       string               `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Country    string               `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	AnimeType  string               `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Tag        string               `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	Studios    string               `protobuf:"bytes,7,opt,name=studios,proto3" json:"studios,omitempty"`
	Status     string               `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Rating     int64                `protobuf:"varint,9,opt,name=rating,proto3" json:"rating,omitempty"`
	RelaseDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
}

func (x *AnimeUpdateReq) Reset() {
	*x = AnimeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeUpdateReq) ProtoMessage() {}

func (x *AnimeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeUpdateReq.ProtoReflect.Descriptor instead.
func (*AnimeUpdateReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{5}
}

func (x *AnimeUpdateReq) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

func (x *AnimeUpdateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AnimeUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AnimeUpdateReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AnimeUpdateReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *AnimeUpdateReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AnimeUpdateReq) GetStudios() string {
	if x != nil {
		return x.Studios
	}
	return ""
}

func (x *AnimeUpdateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AnimeUpdateReq) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AnimeUpdateReq) GetRelaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

type AnimeUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeId int64 `protobuf:"varint,1,opt,name=anime_id,json=animeId,proto3" json:"anime_id,omitempty"`
}

func (x *AnimeUpdateResp) Reset() {
	*x = AnimeUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeUpdateResp) ProtoMessage() {}

func (x *AnimeUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeUpdateResp.ProtoReflect.Descriptor instead.
func (*AnimeUpdateResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{6}
}

func (x *AnimeUpdateResp) GetAnimeId() int64 {
	if x != nil {
		return x.AnimeId
	}
	return 0
}

// 查询
// 默认根据更新时间排序分页
type AnimeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64                `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int64                `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Tag        string               `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	AnimeType  string               `protobuf:"bytes,5,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Country    string               `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	RelaseDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
	UpdateDate *timestamp.Timestamp `protobuf:"bytes,8,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
}

func (x *AnimeListReq) Reset() {
	*x = AnimeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListReq) ProtoMessage() {}

func (x *AnimeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListReq.ProtoReflect.Descriptor instead.
func (*AnimeListReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{7}
}

func (x *AnimeListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AnimeListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AnimeListReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AnimeListReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *AnimeListReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AnimeListReq) GetRelaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

func (x *AnimeListReq) GetUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateDate
	}
	return nil
}

type AnimeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeList []*Item `protobuf:"bytes,1,rep,name=anime_list,json=animeList,proto3" json:"anime_list,omitempty"`
}

func (x *AnimeListResp) Reset() {
	*x = AnimeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeListResp) ProtoMessage() {}

func (x *AnimeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeListResp.ProtoReflect.Descriptor instead.
func (*AnimeListResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{8}
}

func (x *AnimeListResp) GetAnimeList() []*Item {
	if x != nil {
		return x.AnimeList
	}
	return nil
}

// 多条件分页查询
type PageByCondReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int64                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Tag        string               `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	AnimeType  string               `protobuf:"bytes,4,opt,name=anime_type,json=animeType,proto3" json:"anime_type,omitempty"`
	Country    string               `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	RelaseDate *timestamp.Timestamp `protobuf:"bytes,6,opt,name=relase_date,json=relaseDate,proto3" json:"relase_date,omitempty"`
}

func (x *PageByCondReq) Reset() {
	*x = PageByCondReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageByCondReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageByCondReq) ProtoMessage() {}

func (x *PageByCondReq) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageByCondReq.ProtoReflect.Descriptor instead.
func (*PageByCondReq) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{9}
}

func (x *PageByCondReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageByCondReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageByCondReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PageByCondReq) GetAnimeType() string {
	if x != nil {
		return x.AnimeType
	}
	return ""
}

func (x *PageByCondReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PageByCondReq) GetRelaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.RelaseDate
	}
	return nil
}

type PageByCondResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeList []*Item `protobuf:"bytes,1,rep,name=anime_list,json=animeList,proto3" json:"anime_list,omitempty"`
}

func (x *PageByCondResp) Reset() {
	*x = PageByCondResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageByCondResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageByCondResp) ProtoMessage() {}

func (x *PageByCondResp) ProtoReflect() protoreflect.Message {
	mi := &file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageByCondResp.ProtoReflect.Descriptor instead.
func (*PageByCondResp) Descriptor() ([]byte, []int) {
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP(), []int{10}
}

func (x *PageByCondResp) GetAnimeList() []*Item {
	if x != nil {
		return x.AnimeList
	}
	return nil
}

var File_apps_anime_rpc_desc_proto_anime_proto protoreflect.FileDescriptor

var file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd0, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x0b, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x29,
	0x0a, 0x0c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0e, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0f, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x0e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2c,
	0x0a, 0x0f, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x84, 0x02, 0x0a,
	0x0c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b,
	0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x50,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xab, 0x02, 0x0a, 0x05, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64, 0x12,
	0x12, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x13, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce sync.Once
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = file_apps_anime_rpc_desc_proto_anime_proto_rawDesc
)

func file_apps_anime_rpc_desc_proto_anime_proto_rawDescGZIP() []byte {
	file_apps_anime_rpc_desc_proto_anime_proto_rawDescOnce.Do(func() {
		file_apps_anime_rpc_desc_proto_anime_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_anime_rpc_desc_proto_anime_proto_rawDescData)
	})
	return file_apps_anime_rpc_desc_proto_anime_proto_rawDescData
}

var file_apps_anime_rpc_desc_proto_anime_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_apps_anime_rpc_desc_proto_anime_proto_goTypes = []any{
	(*Item)(nil),                // 0: anime.Item
	(*AnimeAddReq)(nil),         // 1: anime.AnimeAddReq
	(*AnimeAddResp)(nil),        // 2: anime.AnimeAddResp
	(*AnimeDeleteReq)(nil),      // 3: anime.AnimeDeleteReq
	(*AnimeDeleteResp)(nil),     // 4: anime.AnimeDeleteResp
	(*AnimeUpdateReq)(nil),      // 5: anime.AnimeUpdateReq
	(*AnimeUpdateResp)(nil),     // 6: anime.AnimeUpdateResp
	(*AnimeListReq)(nil),        // 7: anime.AnimeListReq
	(*AnimeListResp)(nil),       // 8: anime.AnimeListResp
	(*PageByCondReq)(nil),       // 9: anime.PageByCondReq
	(*PageByCondResp)(nil),      // 10: anime.PageByCondResp
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = []int32{
	11, // 0: anime.Item.relase_date:type_name -> google.protobuf.Timestamp
	11, // 1: anime.Item.update_date:type_name -> google.protobuf.Timestamp
	11, // 2: anime.Item.updated_at:type_name -> google.protobuf.Timestamp
	11, // 3: anime.Item.created_at:type_name -> google.protobuf.Timestamp
	11, // 4: anime.AnimeAddReq.relase_date:type_name -> google.protobuf.Timestamp
	11, // 5: anime.AnimeUpdateReq.relase_date:type_name -> google.protobuf.Timestamp
	11, // 6: anime.AnimeListReq.relase_date:type_name -> google.protobuf.Timestamp
	11, // 7: anime.AnimeListReq.update_date:type_name -> google.protobuf.Timestamp
	0,  // 8: anime.AnimeListResp.anime_list:type_name -> anime.Item
	11, // 9: anime.PageByCondReq.relase_date:type_name -> google.protobuf.Timestamp
	0,  // 10: anime.PageByCondResp.anime_list:type_name -> anime.Item
	1,  // 11: anime.Anime.AnimeAdd:input_type -> anime.AnimeAddReq
	3,  // 12: anime.Anime.AnimeDelete:input_type -> anime.AnimeDeleteReq
	5,  // 13: anime.Anime.AnimeUpdate:input_type -> anime.AnimeUpdateReq
	7,  // 14: anime.Anime.AnimeList:input_type -> anime.AnimeListReq
	9,  // 15: anime.Anime.PageByCond:input_type -> anime.PageByCondReq
	2,  // 16: anime.Anime.AnimeAdd:output_type -> anime.AnimeAddResp
	4,  // 17: anime.Anime.AnimeDelete:output_type -> anime.AnimeDeleteResp
	6,  // 18: anime.Anime.AnimeUpdate:output_type -> anime.AnimeUpdateResp
	8,  // 19: anime.Anime.AnimeList:output_type -> anime.AnimeListResp
	10, // 20: anime.Anime.PageByCond:output_type -> anime.PageByCondResp
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_apps_anime_rpc_desc_proto_anime_proto_init() }
func file_apps_anime_rpc_desc_proto_anime_proto_init() {
	if File_apps_anime_rpc_desc_proto_anime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AnimeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PageByCondReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_anime_rpc_desc_proto_anime_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PageByCondResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_anime_rpc_desc_proto_anime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apps_anime_rpc_desc_proto_anime_proto_goTypes,
		DependencyIndexes: file_apps_anime_rpc_desc_proto_anime_proto_depIdxs,
		MessageInfos:      file_apps_anime_rpc_desc_proto_anime_proto_msgTypes,
	}.Build()
	File_apps_anime_rpc_desc_proto_anime_proto = out.File
	file_apps_anime_rpc_desc_proto_anime_proto_rawDesc = nil
	file_apps_anime_rpc_desc_proto_anime_proto_goTypes = nil
	file_apps_anime_rpc_desc_proto_anime_proto_depIdxs = nil
}
