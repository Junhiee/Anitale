// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: anime.proto

package server

import (
	"context"

	"Anitale/apps/anime/rpc/internal/logic"
	"Anitale/apps/anime/rpc/internal/svc"
	"Anitale/apps/anime/rpc/pb"
)

type AnimeServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAnimeServer
}

func NewAnimeServer(svcCtx *svc.ServiceContext) *AnimeServer {
	return &AnimeServer{
		svcCtx: svcCtx,
	}
}

func (s *AnimeServer) AnimeAdd(ctx context.Context, in *pb.AddAnimeReq) (*pb.AddAnimeResp, error) {
	l := logic.NewAnimeAddLogic(ctx, s.svcCtx)
	return l.AnimeAdd(in)
}

func (s *AnimeServer) AnimeDelete(ctx context.Context, in *pb.DeleteAnimeReq) (*pb.DeleteAnimeResp, error) {
	l := logic.NewAnimeDeleteLogic(ctx, s.svcCtx)
	return l.AnimeDelete(in)
}

func (s *AnimeServer) AnimeUpdate(ctx context.Context, in *pb.UpdateAnimeReq) (*pb.UpdateAnimeResp, error) {
	l := logic.NewAnimeUpdateLogic(ctx, s.svcCtx)
	return l.AnimeUpdate(in)
}

// 多条件分页查询
func (s *AnimeServer) AnimeList(ctx context.Context, in *pb.AnimeListReq) (*pb.AnimeListResp, error) {
	l := logic.NewAnimeListLogic(ctx, s.svcCtx)
	return l.AnimeList(in)
}
