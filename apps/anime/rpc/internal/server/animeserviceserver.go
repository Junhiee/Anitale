// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: anime.proto

package server

import (
	"context"

	"Anitale/apps/anime/rpc/internal/logic"
	"Anitale/apps/anime/rpc/internal/svc"
	"Anitale/apps/anime/rpc/pb"
)

type AnimeServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAnimeServiceServer
}

func NewAnimeServiceServer(svcCtx *svc.ServiceContext) *AnimeServiceServer {
	return &AnimeServiceServer{
		svcCtx: svcCtx,
	}
}

// Anime
func (s *AnimeServiceServer) AnimeList(ctx context.Context, in *pb.AnimeListReq) (*pb.AnimeListResp, error) {
	l := logic.NewAnimeListLogic(ctx, s.svcCtx)
	return l.AnimeList(in)
}

func (s *AnimeServiceServer) GetAnime(ctx context.Context, in *pb.GetAnimeReq) (*pb.GetAnimeResp, error) {
	l := logic.NewGetAnimeLogic(ctx, s.svcCtx)
	return l.GetAnime(in)
}

func (s *AnimeServiceServer) AddAnime(ctx context.Context, in *pb.AddAnimeReq) (*pb.AddAnimeResp, error) {
	l := logic.NewAddAnimeLogic(ctx, s.svcCtx)
	return l.AddAnime(in)
}

func (s *AnimeServiceServer) DeleteAnime(ctx context.Context, in *pb.DeleteAnimeReq) (*pb.DeleteAnimeResp, error) {
	l := logic.NewDeleteAnimeLogic(ctx, s.svcCtx)
	return l.DeleteAnime(in)
}

func (s *AnimeServiceServer) UpdateAnime(ctx context.Context, in *pb.UpdateAnimeReq) (*pb.UpdateAnimeResp, error) {
	l := logic.NewUpdateAnimeLogic(ctx, s.svcCtx)
	return l.UpdateAnime(in)
}

func (s *AnimeServiceServer) Rank(ctx context.Context, in *pb.RankReq) (*pb.AnimeListResp, error) {
	l := logic.NewRankLogic(ctx, s.svcCtx)
	return l.Rank(in)
}

// Anime Episodes
func (s *AnimeServiceServer) GetEpisodeList(ctx context.Context, in *pb.GetEpisodesReq) (*pb.GetEpisodeListResp, error) {
	l := logic.NewGetEpisodeListLogic(ctx, s.svcCtx)
	return l.GetEpisodeList(in)
}

func (s *AnimeServiceServer) AddEpisodes(ctx context.Context, in *pb.AddEpisodesReq) (*pb.AddEpisodesResp, error) {
	l := logic.NewAddEpisodesLogic(ctx, s.svcCtx)
	return l.AddEpisodes(in)
}

func (s *AnimeServiceServer) UpdateEpisodes(ctx context.Context, in *pb.UpdateEpisodesReq) (*pb.UpdateEpisodesResp, error) {
	l := logic.NewUpdateEpisodesLogic(ctx, s.svcCtx)
	return l.UpdateEpisodes(in)
}

// Anime Character
func (s *AnimeServiceServer) GetCharacterList(ctx context.Context, in *pb.GetCharacterReq) (*pb.GetCharacterListResp, error) {
	l := logic.NewGetCharacterListLogic(ctx, s.svcCtx)
	return l.GetCharacterList(in)
}

// Anime Tag
func (s *AnimeServiceServer) GetTags(ctx context.Context, in *pb.TagReq) (*pb.TagResp, error) {
	l := logic.NewGetTagsLogic(ctx, s.svcCtx)
	return l.GetTags(in)
}
