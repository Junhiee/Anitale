// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: anime.proto

package animeservice

import (
	"context"

	"Anitale/apps/anime/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddAnimeReq          = pb.AddAnimeReq
	AddAnimeResp         = pb.AddAnimeResp
	AddEpisodesReq       = pb.AddEpisodesReq
	AddEpisodesResp      = pb.AddEpisodesResp
	Anime                = pb.Anime
	AnimeListReq         = pb.AnimeListReq
	AnimeListResp        = pb.AnimeListResp
	Character            = pb.Character
	DeleteAnimeReq       = pb.DeleteAnimeReq
	DeleteAnimeResp      = pb.DeleteAnimeResp
	Episode              = pb.Episode
	GetAnimeReq          = pb.GetAnimeReq
	GetAnimeResp         = pb.GetAnimeResp
	GetCharacterListResp = pb.GetCharacterListResp
	GetCharacterReq      = pb.GetCharacterReq
	GetEpisodeListResp   = pb.GetEpisodeListResp
	GetEpisodesReq       = pb.GetEpisodesReq
	RankReq              = pb.RankReq
	Tag                  = pb.Tag
	TagReq               = pb.TagReq
	TagResp              = pb.TagResp
	UpdateAnimeReq       = pb.UpdateAnimeReq
	UpdateAnimeResp      = pb.UpdateAnimeResp
	UpdateEpisodesReq    = pb.UpdateEpisodesReq
	UpdateEpisodesResp   = pb.UpdateEpisodesResp

	AnimeService interface {
		// Anime
		AnimeList(ctx context.Context, in *AnimeListReq, opts ...grpc.CallOption) (*AnimeListResp, error)
		GetAnime(ctx context.Context, in *GetAnimeReq, opts ...grpc.CallOption) (*GetAnimeResp, error)
		AddAnime(ctx context.Context, in *AddAnimeReq, opts ...grpc.CallOption) (*AddAnimeResp, error)
		DeleteAnime(ctx context.Context, in *DeleteAnimeReq, opts ...grpc.CallOption) (*DeleteAnimeResp, error)
		UpdateAnime(ctx context.Context, in *UpdateAnimeReq, opts ...grpc.CallOption) (*UpdateAnimeResp, error)
		Rank(ctx context.Context, in *RankReq, opts ...grpc.CallOption) (*AnimeListResp, error)
		// Anime Episodes
		GetEpisodeList(ctx context.Context, in *GetEpisodesReq, opts ...grpc.CallOption) (*GetEpisodeListResp, error)
		AddEpisodes(ctx context.Context, in *AddEpisodesReq, opts ...grpc.CallOption) (*AddEpisodesResp, error)
		UpdateEpisodes(ctx context.Context, in *UpdateEpisodesReq, opts ...grpc.CallOption) (*UpdateEpisodesResp, error)
		// Anime Character
		GetCharacterList(ctx context.Context, in *GetCharacterReq, opts ...grpc.CallOption) (*GetCharacterListResp, error)
		// Anime Tag
		GetTags(ctx context.Context, in *TagReq, opts ...grpc.CallOption) (*TagResp, error)
	}

	defaultAnimeService struct {
		cli zrpc.Client
	}
)

func NewAnimeService(cli zrpc.Client) AnimeService {
	return &defaultAnimeService{
		cli: cli,
	}
}

// Anime
func (m *defaultAnimeService) AnimeList(ctx context.Context, in *AnimeListReq, opts ...grpc.CallOption) (*AnimeListResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.AnimeList(ctx, in, opts...)
}

func (m *defaultAnimeService) GetAnime(ctx context.Context, in *GetAnimeReq, opts ...grpc.CallOption) (*GetAnimeResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.GetAnime(ctx, in, opts...)
}

func (m *defaultAnimeService) AddAnime(ctx context.Context, in *AddAnimeReq, opts ...grpc.CallOption) (*AddAnimeResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.AddAnime(ctx, in, opts...)
}

func (m *defaultAnimeService) DeleteAnime(ctx context.Context, in *DeleteAnimeReq, opts ...grpc.CallOption) (*DeleteAnimeResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.DeleteAnime(ctx, in, opts...)
}

func (m *defaultAnimeService) UpdateAnime(ctx context.Context, in *UpdateAnimeReq, opts ...grpc.CallOption) (*UpdateAnimeResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.UpdateAnime(ctx, in, opts...)
}

func (m *defaultAnimeService) Rank(ctx context.Context, in *RankReq, opts ...grpc.CallOption) (*AnimeListResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.Rank(ctx, in, opts...)
}

// Anime Episodes
func (m *defaultAnimeService) GetEpisodeList(ctx context.Context, in *GetEpisodesReq, opts ...grpc.CallOption) (*GetEpisodeListResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.GetEpisodeList(ctx, in, opts...)
}

func (m *defaultAnimeService) AddEpisodes(ctx context.Context, in *AddEpisodesReq, opts ...grpc.CallOption) (*AddEpisodesResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.AddEpisodes(ctx, in, opts...)
}

func (m *defaultAnimeService) UpdateEpisodes(ctx context.Context, in *UpdateEpisodesReq, opts ...grpc.CallOption) (*UpdateEpisodesResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.UpdateEpisodes(ctx, in, opts...)
}

// Anime Character
func (m *defaultAnimeService) GetCharacterList(ctx context.Context, in *GetCharacterReq, opts ...grpc.CallOption) (*GetCharacterListResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.GetCharacterList(ctx, in, opts...)
}

// Anime Tag
func (m *defaultAnimeService) GetTags(ctx context.Context, in *TagReq, opts ...grpc.CallOption) (*TagResp, error) {
	client := pb.NewAnimeServiceClient(m.cli.Conn())
	return client.GetTags(ctx, in, opts...)
}
