syntax = "proto3";

package anime;

import "google/protobuf/timestamp.proto";

option go_package = "/pb";

message Item {
    int64 anime_id = 1;
    string title = 2;
    string desc = 3;
    string region = 4;
    string anime_type = 5;
    string img_url = 6;
    string studios = 7;
    string status = 8;
    double rating = 9;
    google.protobuf.Timestamp release_date = 10;
    google.protobuf.Timestamp update_date = 11;
    google.protobuf.Timestamp updated_at = 12;
    google.protobuf.Timestamp created_at = 13;
}

// 获得一条anime数据
message GetAnimeReq {
    int64 anime_id = 1;
}

message GetAnimeResp {
    Item anime = 1;
}

// 增加一条anime数据
message AddAnimeReq {
    string title = 1;
    string desc = 2;
    string country = 3;
    string anime_type = 4;
    string img_url = 5;
    string studios = 6;
    string status = 7;
    double rating = 8;
    google.protobuf.Timestamp release_date = 9;
    google.protobuf.Timestamp update_date = 10;
}

message AddAnimeResp {
    int64 anime_id = 1;
}

// 删除一条anime数据
message DeleteAnimeReq {
    int64 anime_id = 1;
}

message DeleteAnimeResp {
    int64 anime_id = 1;
}

// 修改一条anime数据
message UpdateAnimeReq {
    int64 anime_id = 1;
    string title = 2;
    string desc = 3;
    string region = 4;
    string anime_type = 5;
    string img_url = 6;
    string studios = 7;
    string status = 8;
    double rating = 9;
    google.protobuf.Timestamp release_date = 10;
    google.protobuf.Timestamp update_date = 11;
}

message UpdateAnimeResp {
    int64 anime_id = 1;
}


message AnimeListReq {
    int64 page = 1;
    int64 page_size = 2;

    string tag = 3;
    string anime_type = 4;
    string region = 5;
    double rating = 6;
    int64 year = 7;
    int64 season = 8;
    string sort = 9;
    string sort_order = 10;
}

message AnimeListResp {
  repeated Item anime_list = 1;
}

service Anime {
    rpc GetAnime (GetAnimeReq) returns (GetAnimeResp);
    rpc AddAnime(AddAnimeReq) returns (AddAnimeResp);
    rpc DeleteAnime(DeleteAnimeReq) returns (DeleteAnimeResp);
    rpc UpdateAnime(UpdateAnimeReq) returns (UpdateAnimeResp);

    // 多条件分页查询
    rpc AnimeList(AnimeListReq) returns (AnimeListResp);
}