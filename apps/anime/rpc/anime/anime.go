// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: anime.proto

package anime

import (
	"context"

	"Anitale/apps/anime/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AnimeAddReq     = pb.AnimeAddReq
	AnimeAddResp    = pb.AnimeAddResp
	AnimeDeleteReq  = pb.AnimeDeleteReq
	AnimeDeleteResp = pb.AnimeDeleteResp
	AnimeListReq    = pb.AnimeListReq
	AnimeListResp   = pb.AnimeListResp
	AnimeUpdateReq  = pb.AnimeUpdateReq
	AnimeUpdateResp = pb.AnimeUpdateResp
	Item            = pb.Item
	PageByCondReq   = pb.PageByCondReq
	PageByCondResp  = pb.PageByCondResp

	Anime interface {
		AnimeAdd(ctx context.Context, in *AnimeAddReq, opts ...grpc.CallOption) (*AnimeAddResp, error)
		AnimeDelete(ctx context.Context, in *AnimeDeleteReq, opts ...grpc.CallOption) (*AnimeDeleteResp, error)
		AnimeUpdate(ctx context.Context, in *AnimeUpdateReq, opts ...grpc.CallOption) (*AnimeUpdateResp, error)
		AnimeList(ctx context.Context, in *AnimeListReq, opts ...grpc.CallOption) (*AnimeListResp, error)
		PageByCond(ctx context.Context, in *PageByCondReq, opts ...grpc.CallOption) (*PageByCondResp, error)
	}

	defaultAnime struct {
		cli zrpc.Client
	}
)

func NewAnime(cli zrpc.Client) Anime {
	return &defaultAnime{
		cli: cli,
	}
}

func (m *defaultAnime) AnimeAdd(ctx context.Context, in *AnimeAddReq, opts ...grpc.CallOption) (*AnimeAddResp, error) {
	client := pb.NewAnimeClient(m.cli.Conn())
	return client.AnimeAdd(ctx, in, opts...)
}

func (m *defaultAnime) AnimeDelete(ctx context.Context, in *AnimeDeleteReq, opts ...grpc.CallOption) (*AnimeDeleteResp, error) {
	client := pb.NewAnimeClient(m.cli.Conn())
	return client.AnimeDelete(ctx, in, opts...)
}

func (m *defaultAnime) AnimeUpdate(ctx context.Context, in *AnimeUpdateReq, opts ...grpc.CallOption) (*AnimeUpdateResp, error) {
	client := pb.NewAnimeClient(m.cli.Conn())
	return client.AnimeUpdate(ctx, in, opts...)
}

func (m *defaultAnime) AnimeList(ctx context.Context, in *AnimeListReq, opts ...grpc.CallOption) (*AnimeListResp, error) {
	client := pb.NewAnimeClient(m.cli.Conn())
	return client.AnimeList(ctx, in, opts...)
}

func (m *defaultAnime) PageByCond(ctx context.Context, in *PageByCondReq, opts ...grpc.CallOption) (*PageByCondResp, error) {
	client := pb.NewAnimeClient(m.cli.Conn())
	return client.PageByCond(ctx, in, opts...)
}
