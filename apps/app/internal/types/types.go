// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type Anime struct {
	Title      string `json:"title"`
	ImgURL     string `json:"img_url"`
	Tag        string `json:"tag"`
	UpdateTime int64  `json:"update_time"`
}

type AnimeListReq struct {
	Page      int64  `json:"page,defaule=1"`
	PageSize  int64  `form:"page_size,default=20"`
	Region    string `json:"region,optional"`
	Tag       string `json:"tag,optional"`
	AnimeType string `json:"anime_type,optional"`
	Year      int64  `json:"year,optional"`
	Season    int64  `json:"season,optional"`
	Sort      string `json:"sort,defaule=time"`
}

type AnimeListResp struct {
	Animes []*Anime `json:"animes"`
}

type Base struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type GetUserProfileReq struct {
	UserId uint64 `path:"user_id"`
}

type GetUserProfileResp struct {
	Profile UserProfile `json:"profile"`
}

type RegisterUserReq struct {
	UserName string `json:"user_name"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type RegisterUserResp struct {
	User User `json:"user"`
}

type User struct {
	Id         uint64 `json:"id"`
	UserName   string `json:"user_name"`
	Email      string `json:"email"`
	IsActive   bool   `json:"is_active"`
	IsVerified bool   `json:"is_verified"`
}

type UserLoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type UserLoginResp struct {
	AccessToken string `json:"access_token"`
	Expire      int64  `json:"expire"`
}

type UserProfile struct {
	UserId    uint64 `json:"user_id"`
	FullName  string `json:"full_name"`
	Bio       string `json:"bio"`
	AvatarUrl string `json:"avatar_url"`
	Birthday  string `json:"birthday"`
	Gender    string `json:"gender"`
	Loc       string `json:"loc"`
}
